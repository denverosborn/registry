---
#- name: "{{ role_name }} | Prepare download directory"
#  file:
#    state: directory
#    path: '{{ controller_mirror_registry_download_dir }}'
#
#- name: Download the Mirror registry sums
#get_url:
#url: '{{ mirror_registry_download_url }}/sha256sum.txt.sig'
#dest: '{{ controller_mirror_registry_download_dir }}/sha256sum.txt.sig'
#
#- name: Decrypt the Mirror registry sums
#shell: >
#gpg --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release &&
#gpg --output ./sha256sum.txt --decrypt sha256sum.txt.sig
#args:
#chdir: '{{ controller_mirror_registry_download_dir }}'
#creates: '{{ controller_mirror_registry_download_dir }}/sha256sum.txt'
#changed_when: false
#
#- name: Download the Mirror Registry installer and signature
#get_url:
#url: '{{ mirror_registry_download_url }}/{{ item }}'
#dest: '{{ controller_mirror_registry_download_dir }}/{{ item }}'
#checksum: sha256:{{ lookup("file", controller_mirror_registry_download_dir + "/sha256sum.txt")|regex_search("[0-9a-f]+ +" + item|regex_escape)|split(" ")|list|first }}
#loop:
#- mirror-registry.tar.gz
#- mirror-registry.tar.gz.asc
#
#- name: Validate the signature on the Mirror Registry installer
#shell: >
#gpg --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release &&
#gpg --verify mirror-registry.tar.gz.asc mirror-registry.tar.gz
#args:
#chdir: '{{ controller_mirror_registry_download_dir }}'
#changed_when: false

- name: unpack ocp-images.tar
  unarchive:
    src: /root/utility/ocp-images.tar
    dest: /root/utility
    remote_src: true

- name: Ensure directories exist
  become: true
  file:
    path: '{{ item }}'
    state: directory
  loop:
  - /etc/quay/pki
  - /etc/quay/data

- name: Unpack the Mirror Registry installer on the registry node
  unarchive:
    src: '{{ controller_mirror_registry_download_dir }}/mirror-registry.tar.gz'
    dest: '{{ ansible_env["HOME"] }}'
    creates: '{{ ansible_env["HOME"] }}/mirror-registry'

- name: Create registry certificates
  command: openssl req -newkey rsa:3072 -nodes -sha256 -keyout /etc/quay/pki/ssl.key -x509 -days 365 -out /etc/quay/pki/ssl.cert -subj "/C=US/CN=localhost" -addext "subjectAltName=IP:{{ quay_host_ip }},DNS:{{ quay_hostname }}"

- name: Create Mirror Registry instance
  shell: >
         ./mirror-registry install --initUser '{{ registry_admin.username }}' --initPassword '{{ registry_admin.password }}' --quayHostname '{{ quay_hostname }}:8443' --sslCert /etc/quay/pki/ssl.cert --sslKey /etc/quay/pki/ssl.key
  args:
    chdir: /root # '{{ ansible_env["HOME"] }}'
    # creates: /etc/systemd/system/quay-pod.service
  async: 1800  # wait up to half an hour for installation of the mirror registry
  poll: 5
  register: mirror_registry_install

- name: Ensure Mirror Registry is running
  become: yes
  systemd:
    name: '{{ item }}'
    state: started
    enabled: yes
  loop:
  - quay-pod
  - quay-postgres
  - quay-redis
  - quay-app

- name: Copy certificate to the CA anchors folder
  become: true
  copy:
    remote_src: yes
    src: '{{ cert_directory }}/ssl.cert'
    dest: /etc/pki/ca-trust/source/anchors/registry.crt
  register: cert_in_anchors

- name: Trust certificate
  become: true
  command: update-ca-trust
  when: cert_in_anchors.changed

- name: check quay_status
  uri:
    url: https://{{ quay_hostname }}:8443/api/v1/superuser/registrystatus
    method: GET
    status_code: 200

#this will add username/pw auth to config.json
- name: Log into mirror-registry
  shell: podman login -u '{{ registry_admin.username }}' -p '{{ registry_admin.password }}' --authfile {{ json_pull_secret }} {{ quay_hostname }}:8443 --tls-verify=false

#- name: oc-mirror to populate the mirror-registry
#  shell: oc-mirror --from={{ oc_mirror_tar_output }} docker://{{ quay_hostname }}:8443 --dest-skip-tls
#  when: true
